{"version":3,"sources":["Statistics/Statistics.jsx","FeedbackOptions/FeedbackOptions.jsx","Section/Section.jsx","Statistics/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","onLeaveFeedback","type","onClick","Section","title","children","Notofication","App","useState","setGood","setNeutral","setBad","className","e","currentTarget","textContent","toLowerCase","prevState","Math","round","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OACe,SAASA,EAAT,GAMX,IALFC,EAKC,EALDA,KACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,IACAC,EAEC,EAFDA,MACAC,EACC,EADDA,mBAEA,OACE,gCACE,uCAAUJ,KACV,0CAAaC,KACb,sCAASC,KACT,uCAAUC,KACV,oDAAuBC,EAAvB,U,MCZS,SAASC,EAAT,GAA+C,IAApBC,EAAmB,EAAnBA,gBACxC,OACE,gCACE,wBAAQC,KAAK,SAASC,QAASF,EAA/B,kBAGA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,qBAGA,wBAAQC,KAAK,SAASC,QAASF,EAA/B,oBCVS,SAASG,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACvC,OACE,oCACE,6BAAKD,IACJC,KCJQ,SAASC,IACtB,OAAO,kDCIM,SAASC,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOd,EAAP,KAAae,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOb,EAAP,KAAgBe,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOZ,EAAP,KAAYe,EAAZ,KA0BA,OACE,sBAAKC,UAAU,WAAf,UACE,cAACT,EAAD,CAASC,MAAM,wBAAf,SACE,cAACL,EAAD,CAAiBC,gBA3BC,SAACa,GAEvB,OADkBA,EAAEC,cAAcC,YAAYC,eAE5C,IAAK,OACHP,GAAQ,SAACQ,GAAD,OAAeA,EAAY,KACnC,MACF,IAAK,UACHP,GAAW,SAACO,GAAD,OAAeA,EAAY,KACtC,MACF,IAAK,MACHN,GAAO,SAACM,GAAD,OAAeA,EAAY,KAClC,MACF,QACE,aAiBF,cAACd,EAAD,CAASC,MAAM,aAAf,SACGV,EAAOC,EAAUC,IAAQ,EACxB,cAACU,EAAD,IAEA,cAACb,EAAD,CACEC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MApBDH,EAAOC,EAAUC,EAqBhBE,mBAlBDoB,KAAKC,MAAM,KAAOzB,EAAOC,EAAUC,IAAQF,SChCtD,IAYe0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c94a8607.chunk.js","sourcesContent":["import React from \"react\";\r\nexport default function Statistics({\r\n  good,\r\n  neutral,\r\n  bad,\r\n  total,\r\n  positivePercentage,\r\n}) {\r\n  return (\r\n    <div>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total:{total}</p>\r\n      <p>Positive feedback: {positivePercentage}%</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nexport default function FeedbackOptions({ onLeaveFeedback }) {\r\n  return (\r\n    <div>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={onLeaveFeedback}>\r\n        Bad\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n","import React from \"react\";\r\nexport default function Notofication() {\r\n  return <p>No feedback given</p>;\r\n}\r\n","import \"./App.css\";\nimport React, { useState } from \"react\";\nimport Statistics from \"./Statistics/Statistics\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Section/Section\";\nimport Notofication from \"./Statistics/Notification/Notification\";\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onClickFeedback = (e) => {\n    const targetBtn = e.currentTarget.textContent.toLowerCase();\n    switch (targetBtn) {\n      case \"good\":\n        setGood((prevState) => prevState + 1);\n        break;\n      case \"neutral\":\n        setNeutral((prevState) => prevState + 1);\n        break;\n      case \"bad\":\n        setBad((prevState) => prevState + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n  const countPositiveFeedbackPercentage = () => {\n    return Math.round(100 / (good + neutral + bad)) * good;\n  };\n\n  return (\n    <div className=\"main-div\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions onLeaveFeedback={onClickFeedback} />\n      </Section>\n\n      <Section title=\"Statistics\">\n        {good + neutral + bad === 0 ? (\n          <Notofication />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={countTotalFeedback()}\n            positivePercentage={countPositiveFeedbackPercentage()}\n          />\n        )}\n      </Section>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}